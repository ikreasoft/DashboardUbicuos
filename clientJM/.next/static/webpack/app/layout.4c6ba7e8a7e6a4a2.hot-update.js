"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/layout",{

/***/ "(app-pages-browser)/./src/providers/data-provider/index.ts":
/*!**********************************************!*\
  !*** ./src/providers/data-provider/index.ts ***!
  \**********************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   dataProvider: function() { return /* binding */ dataProvider; }\n/* harmony export */ });\n/* __next_internal_client_entry_do_not_use__ dataProvider auto */ const API_URL = \"http://localhost:4000\"; // Cambia esto a la URL de tu backend.\nconst dataProvider = {\n    getList: async (resource, params)=>{\n        try {\n            const response = await fetch(\"\".concat(API_URL, \"/\").concat(resource));\n            const data = await response.json();\n            return {\n                data: data.map((item)=>({\n                        ...item,\n                        id: item._id\n                    })),\n                total: data.length\n            };\n        } catch (error) {\n            console.error(\"Error en getList:\", error);\n            throw error;\n        }\n    },\n    getOne: async (resource, param)=>{\n        let { id } = param;\n        try {\n            const response = await fetch(\"\".concat(API_URL, \"/\").concat(resource, \"/\").concat(id));\n            const data = await response.json();\n            return {\n                data: {\n                    ...data,\n                    id: data._id\n                }\n            };\n        } catch (error) {\n            console.error(\"Error en getOne:\", error);\n            throw error;\n        }\n    },\n    create: async (resource, param)=>{\n        let { variables } = param;\n        try {\n            const response = await fetch(\"\".concat(API_URL, \"/\").concat(resource), {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify(variables)\n            });\n            const data = await response.json();\n            return {\n                data: {\n                    ...data,\n                    id: data._id\n                }\n            };\n        } catch (error) {\n            console.error(\"Error en create:\", error);\n            throw error;\n        }\n    },\n    update: async (resource, param)=>{\n        let { id, variables } = param;\n        try {\n            const response = await fetch(\"\".concat(API_URL, \"/\").concat(resource, \"/\").concat(id), {\n                method: \"PUT\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify(variables)\n            });\n            const data = await response.json();\n            return {\n                data: {\n                    ...data,\n                    id: data._id\n                }\n            };\n        } catch (error) {\n            console.error(\"Error en update:\", error);\n            throw error;\n        }\n    },\n    deleteOne: async (resource, param)=>{\n        let { id } = param;\n        try {\n            await fetch(\"\".concat(API_URL, \"/\").concat(resource, \"/\").concat(id), {\n                method: \"DELETE\"\n            });\n            return {\n                data: {\n                    id\n                }\n            };\n        } catch (error) {\n            console.error(\"Error en deleteOne:\", error);\n            throw error;\n        }\n    },\n    getMany: async (resource, param)=>{\n        let { ids } = param;\n        try {\n            const responses = await Promise.all(ids.map((id)=>fetch(\"\".concat(API_URL, \"/\").concat(resource, \"/\").concat(id))));\n            const data = await Promise.all(responses.map((res)=>res.json()));\n            return {\n                data: data.map((item)=>({\n                        ...item,\n                        id: item._id\n                    }))\n            };\n        } catch (error) {\n            console.error(\"Error en getMany:\", error);\n            throw error;\n        }\n    }\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9wcm92aWRlcnMvZGF0YS1wcm92aWRlci9pbmRleC50cyIsIm1hcHBpbmdzIjoiOzs7O2tFQUlBLE1BQU1BLFVBQVUseUJBQXlCLHNDQUFzQztBQUV4RSxNQUFNQyxlQUE2QjtJQUN4Q0MsU0FBUyxPQUFPQyxVQUFVQztRQUN4QixJQUFJO1lBQ0YsTUFBTUMsV0FBVyxNQUFNQyxNQUFNLEdBQWNILE9BQVhILFNBQVEsS0FBWSxPQUFURztZQUMzQyxNQUFNSSxPQUFPLE1BQU1GLFNBQVNHLElBQUk7WUFFaEMsT0FBTztnQkFDTEQsTUFBTUEsS0FBS0UsR0FBRyxDQUFDLENBQUNDLE9BQVU7d0JBQ3hCLEdBQUdBLElBQUk7d0JBQ1BDLElBQUlELEtBQUtFLEdBQUc7b0JBQ2Q7Z0JBQ0FDLE9BQU9OLEtBQUtPLE1BQU07WUFDcEI7UUFDRixFQUFFLE9BQU9DLE9BQU87WUFDZEMsUUFBUUQsS0FBSyxDQUFDLHFCQUFxQkE7WUFDbkMsTUFBTUE7UUFDUjtJQUNGO0lBQ0FFLFFBQVEsT0FBT2Q7WUFBVSxFQUFFUSxFQUFFLEVBQUU7UUFDN0IsSUFBSTtZQUNGLE1BQU1OLFdBQVcsTUFBTUMsTUFBTSxHQUFjSCxPQUFYSCxTQUFRLEtBQWVXLE9BQVpSLFVBQVMsS0FBTSxPQUFIUTtZQUN2RCxNQUFNSixPQUFPLE1BQU1GLFNBQVNHLElBQUk7WUFFaEMsT0FBTztnQkFDTEQsTUFBTTtvQkFBRSxHQUFHQSxJQUFJO29CQUFFSSxJQUFJSixLQUFLSyxHQUFHO2dCQUFDO1lBQ2hDO1FBQ0YsRUFBRSxPQUFPRyxPQUFPO1lBQ2RDLFFBQVFELEtBQUssQ0FBQyxvQkFBb0JBO1lBQ2xDLE1BQU1BO1FBQ1I7SUFDRjtJQUNBRyxRQUFRLE9BQU9mO1lBQVUsRUFBRWdCLFNBQVMsRUFBRTtRQUNwQyxJQUFJO1lBQ0YsTUFBTWQsV0FBVyxNQUFNQyxNQUFNLEdBQWNILE9BQVhILFNBQVEsS0FBWSxPQUFURyxXQUFZO2dCQUNyRGlCLFFBQVE7Z0JBQ1JDLFNBQVM7b0JBQ1AsZ0JBQWdCO2dCQUNsQjtnQkFDQUMsTUFBTUMsS0FBS0MsU0FBUyxDQUFDTDtZQUN2QjtZQUVBLE1BQU1aLE9BQU8sTUFBTUYsU0FBU0csSUFBSTtZQUNoQyxPQUFPO2dCQUNMRCxNQUFNO29CQUFFLEdBQUdBLElBQUk7b0JBQUVJLElBQUlKLEtBQUtLLEdBQUc7Z0JBQUM7WUFDaEM7UUFDRixFQUFFLE9BQU9HLE9BQU87WUFDZEMsUUFBUUQsS0FBSyxDQUFDLG9CQUFvQkE7WUFDbEMsTUFBTUE7UUFDUjtJQUNGO0lBQ0FVLFFBQVEsT0FBT3RCO1lBQVUsRUFBRVEsRUFBRSxFQUFFUSxTQUFTLEVBQUU7UUFDeEMsSUFBSTtZQUNGLE1BQU1kLFdBQVcsTUFBTUMsTUFBTSxHQUFjSCxPQUFYSCxTQUFRLEtBQWVXLE9BQVpSLFVBQVMsS0FBTSxPQUFIUSxLQUFNO2dCQUMzRFMsUUFBUTtnQkFDUkMsU0FBUztvQkFDUCxnQkFBZ0I7Z0JBQ2xCO2dCQUNBQyxNQUFNQyxLQUFLQyxTQUFTLENBQUNMO1lBQ3ZCO1lBRUEsTUFBTVosT0FBTyxNQUFNRixTQUFTRyxJQUFJO1lBQ2hDLE9BQU87Z0JBQ0xELE1BQU07b0JBQUUsR0FBR0EsSUFBSTtvQkFBRUksSUFBSUosS0FBS0ssR0FBRztnQkFBQztZQUNoQztRQUNGLEVBQUUsT0FBT0csT0FBTztZQUNkQyxRQUFRRCxLQUFLLENBQUMsb0JBQW9CQTtZQUNsQyxNQUFNQTtRQUNSO0lBQ0Y7SUFDQVcsV0FBVyxPQUFPdkI7WUFBVSxFQUFFUSxFQUFFLEVBQUU7UUFDaEMsSUFBSTtZQUNGLE1BQU1MLE1BQU0sR0FBY0gsT0FBWEgsU0FBUSxLQUFlVyxPQUFaUixVQUFTLEtBQU0sT0FBSFEsS0FBTTtnQkFDMUNTLFFBQVE7WUFDVjtZQUVBLE9BQU87Z0JBQ0xiLE1BQU07b0JBQUVJO2dCQUFHO1lBQ2I7UUFDRixFQUFFLE9BQU9JLE9BQU87WUFDZEMsUUFBUUQsS0FBSyxDQUFDLHVCQUF1QkE7WUFDckMsTUFBTUE7UUFDUjtJQUNGO0lBQ0FZLFNBQVMsT0FBT3hCO1lBQVUsRUFBRXlCLEdBQUcsRUFBRTtRQUMvQixJQUFJO1lBQ0YsTUFBTUMsWUFBWSxNQUFNQyxRQUFRQyxHQUFHLENBQ2pDSCxJQUFJbkIsR0FBRyxDQUFDLENBQUNFLEtBQU9MLE1BQU0sR0FBY0gsT0FBWEgsU0FBUSxLQUFlVyxPQUFaUixVQUFTLEtBQU0sT0FBSFE7WUFHbEQsTUFBTUosT0FBTyxNQUFNdUIsUUFBUUMsR0FBRyxDQUFDRixVQUFVcEIsR0FBRyxDQUFDLENBQUN1QixNQUFRQSxJQUFJeEIsSUFBSTtZQUU5RCxPQUFPO2dCQUNMRCxNQUFNQSxLQUFLRSxHQUFHLENBQUMsQ0FBQ0MsT0FBVTt3QkFBRSxHQUFHQSxJQUFJO3dCQUFFQyxJQUFJRCxLQUFLRSxHQUFHO29CQUFDO1lBQ3BEO1FBQ0YsRUFBRSxPQUFPRyxPQUFPO1lBQ2RDLFFBQVFELEtBQUssQ0FBQyxxQkFBcUJBO1lBQ25DLE1BQU1BO1FBQ1I7SUFDRjtBQUNGLEVBQUUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3JjL3Byb3ZpZGVycy9kYXRhLXByb3ZpZGVyL2luZGV4LnRzPzNhMjMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2UgY2xpZW50XCI7XHJcblxyXG5pbXBvcnQgeyBEYXRhUHJvdmlkZXIgfSBmcm9tIFwiQHJlZmluZWRldi9jb3JlXCI7XHJcblxyXG5jb25zdCBBUElfVVJMID0gXCJodHRwOi8vbG9jYWxob3N0OjQwMDBcIjsgLy8gQ2FtYmlhIGVzdG8gYSBsYSBVUkwgZGUgdHUgYmFja2VuZC5cclxuXHJcbmV4cG9ydCBjb25zdCBkYXRhUHJvdmlkZXI6IERhdGFQcm92aWRlciA9IHtcclxuICBnZXRMaXN0OiBhc3luYyAocmVzb3VyY2UsIHBhcmFtcykgPT4ge1xyXG4gICAgdHJ5IHtcclxuICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChgJHtBUElfVVJMfS8ke3Jlc291cmNlfWApO1xyXG4gICAgICBjb25zdCBkYXRhID0gYXdhaXQgcmVzcG9uc2UuanNvbigpO1xyXG5cclxuICAgICAgcmV0dXJuIHtcclxuICAgICAgICBkYXRhOiBkYXRhLm1hcCgoaXRlbSkgPT4gKHtcclxuICAgICAgICAgIC4uLml0ZW0sXHJcbiAgICAgICAgICBpZDogaXRlbS5faWQsIC8vIE1hcGVhciBgX2lkYCBhIGBpZGAgcGFyYSBxdWUgcmVmaW5lIGxvIGVudGllbmRhLlxyXG4gICAgICAgIH0pKSxcclxuICAgICAgICB0b3RhbDogZGF0YS5sZW5ndGgsIC8vIFRvdGFsIGRlIHJlZ2lzdHJvcy5cclxuICAgICAgfTtcclxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgIGNvbnNvbGUuZXJyb3IoXCJFcnJvciBlbiBnZXRMaXN0OlwiLCBlcnJvcik7XHJcbiAgICAgIHRocm93IGVycm9yO1xyXG4gICAgfVxyXG4gIH0sXHJcbiAgZ2V0T25lOiBhc3luYyAocmVzb3VyY2UsIHsgaWQgfSkgPT4ge1xyXG4gICAgdHJ5IHtcclxuICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChgJHtBUElfVVJMfS8ke3Jlc291cmNlfS8ke2lkfWApO1xyXG4gICAgICBjb25zdCBkYXRhID0gYXdhaXQgcmVzcG9uc2UuanNvbigpO1xyXG5cclxuICAgICAgcmV0dXJuIHtcclxuICAgICAgICBkYXRhOiB7IC4uLmRhdGEsIGlkOiBkYXRhLl9pZCB9LCAvLyBNYXBlYXIgYF9pZGAgYSBgaWRgLlxyXG4gICAgICB9O1xyXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgY29uc29sZS5lcnJvcihcIkVycm9yIGVuIGdldE9uZTpcIiwgZXJyb3IpO1xyXG4gICAgICB0aHJvdyBlcnJvcjtcclxuICAgIH1cclxuICB9LFxyXG4gIGNyZWF0ZTogYXN5bmMgKHJlc291cmNlLCB7IHZhcmlhYmxlcyB9KSA9PiB7XHJcbiAgICB0cnkge1xyXG4gICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKGAke0FQSV9VUkx9LyR7cmVzb3VyY2V9YCwge1xyXG4gICAgICAgIG1ldGhvZDogXCJQT1NUXCIsXHJcbiAgICAgICAgaGVhZGVyczoge1xyXG4gICAgICAgICAgXCJDb250ZW50LVR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCIsXHJcbiAgICAgICAgfSxcclxuICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh2YXJpYWJsZXMpLFxyXG4gICAgICB9KTtcclxuXHJcbiAgICAgIGNvbnN0IGRhdGEgPSBhd2FpdCByZXNwb25zZS5qc29uKCk7XHJcbiAgICAgIHJldHVybiB7XHJcbiAgICAgICAgZGF0YTogeyAuLi5kYXRhLCBpZDogZGF0YS5faWQgfSwgLy8gTWFwZWFyIGBfaWRgIGEgYGlkYC5cclxuICAgICAgfTtcclxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgIGNvbnNvbGUuZXJyb3IoXCJFcnJvciBlbiBjcmVhdGU6XCIsIGVycm9yKTtcclxuICAgICAgdGhyb3cgZXJyb3I7XHJcbiAgICB9XHJcbiAgfSxcclxuICB1cGRhdGU6IGFzeW5jIChyZXNvdXJjZSwgeyBpZCwgdmFyaWFibGVzIH0pID0+IHtcclxuICAgIHRyeSB7XHJcbiAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goYCR7QVBJX1VSTH0vJHtyZXNvdXJjZX0vJHtpZH1gLCB7XHJcbiAgICAgICAgbWV0aG9kOiBcIlBVVFwiLFxyXG4gICAgICAgIGhlYWRlcnM6IHtcclxuICAgICAgICAgIFwiQ29udGVudC1UeXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiLFxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkodmFyaWFibGVzKSxcclxuICAgICAgfSk7XHJcblxyXG4gICAgICBjb25zdCBkYXRhID0gYXdhaXQgcmVzcG9uc2UuanNvbigpO1xyXG4gICAgICByZXR1cm4ge1xyXG4gICAgICAgIGRhdGE6IHsgLi4uZGF0YSwgaWQ6IGRhdGEuX2lkIH0sIC8vIE1hcGVhciBgX2lkYCBhIGBpZGAuXHJcbiAgICAgIH07XHJcbiAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICBjb25zb2xlLmVycm9yKFwiRXJyb3IgZW4gdXBkYXRlOlwiLCBlcnJvcik7XHJcbiAgICAgIHRocm93IGVycm9yO1xyXG4gICAgfVxyXG4gIH0sXHJcbiAgZGVsZXRlT25lOiBhc3luYyAocmVzb3VyY2UsIHsgaWQgfSkgPT4ge1xyXG4gICAgdHJ5IHtcclxuICAgICAgYXdhaXQgZmV0Y2goYCR7QVBJX1VSTH0vJHtyZXNvdXJjZX0vJHtpZH1gLCB7XHJcbiAgICAgICAgbWV0aG9kOiBcIkRFTEVURVwiLFxyXG4gICAgICB9KTtcclxuXHJcbiAgICAgIHJldHVybiB7XHJcbiAgICAgICAgZGF0YTogeyBpZCB9LCAvLyBSZXRvcm5hciBzb2xvIGVsIGlkIGVsaW1pbmFkby5cclxuICAgICAgfTtcclxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgIGNvbnNvbGUuZXJyb3IoXCJFcnJvciBlbiBkZWxldGVPbmU6XCIsIGVycm9yKTtcclxuICAgICAgdGhyb3cgZXJyb3I7XHJcbiAgICB9XHJcbiAgfSxcclxuICBnZXRNYW55OiBhc3luYyAocmVzb3VyY2UsIHsgaWRzIH0pID0+IHtcclxuICAgIHRyeSB7XHJcbiAgICAgIGNvbnN0IHJlc3BvbnNlcyA9IGF3YWl0IFByb21pc2UuYWxsKFxyXG4gICAgICAgIGlkcy5tYXAoKGlkKSA9PiBmZXRjaChgJHtBUElfVVJMfS8ke3Jlc291cmNlfS8ke2lkfWApKVxyXG4gICAgICApO1xyXG5cclxuICAgICAgY29uc3QgZGF0YSA9IGF3YWl0IFByb21pc2UuYWxsKHJlc3BvbnNlcy5tYXAoKHJlcykgPT4gcmVzLmpzb24oKSkpO1xyXG5cclxuICAgICAgcmV0dXJuIHtcclxuICAgICAgICBkYXRhOiBkYXRhLm1hcCgoaXRlbSkgPT4gKHsgLi4uaXRlbSwgaWQ6IGl0ZW0uX2lkIH0pKSwgLy8gTWFwZWFyIGBfaWRgIGEgYGlkYC5cclxuICAgICAgfTtcclxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgIGNvbnNvbGUuZXJyb3IoXCJFcnJvciBlbiBnZXRNYW55OlwiLCBlcnJvcik7XHJcbiAgICAgIHRocm93IGVycm9yO1xyXG4gICAgfVxyXG4gIH0sXHJcbn07XHJcbiJdLCJuYW1lcyI6WyJBUElfVVJMIiwiZGF0YVByb3ZpZGVyIiwiZ2V0TGlzdCIsInJlc291cmNlIiwicGFyYW1zIiwicmVzcG9uc2UiLCJmZXRjaCIsImRhdGEiLCJqc29uIiwibWFwIiwiaXRlbSIsImlkIiwiX2lkIiwidG90YWwiLCJsZW5ndGgiLCJlcnJvciIsImNvbnNvbGUiLCJnZXRPbmUiLCJjcmVhdGUiLCJ2YXJpYWJsZXMiLCJtZXRob2QiLCJoZWFkZXJzIiwiYm9keSIsIkpTT04iLCJzdHJpbmdpZnkiLCJ1cGRhdGUiLCJkZWxldGVPbmUiLCJnZXRNYW55IiwiaWRzIiwicmVzcG9uc2VzIiwiUHJvbWlzZSIsImFsbCIsInJlcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/providers/data-provider/index.ts\n"));

/***/ })

});